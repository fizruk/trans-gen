on: [push, pull_request]

name: Continuous integration

jobs:
  build-test:
    name: Build and run package tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release

      - name: Build testing binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --example testing

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: testing
          path: target/release/examples/testing

  test-languages:
    name: Test ${{ matrix.language }}
    needs: build-test
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: C++
            lang: cpp
            docker: gcc
            setup: apt-get update && apt-get install -y cmake
          - language: C#
            lang: csharp
            docker: mcr.microsoft.com/dotnet/sdk
          - language: D
            lang: dlang
            docker: dlanguage/dmd
          - language: F#
            lang: fsharp
            docker: mcr.microsoft.com/dotnet/sdk
          - language: Go
            lang: go
            docker: golang
          - language: Java
            lang: java
            docker: maven
          - language: JavaScript
            lang: javascript
            docker: node
          - language: Kotlin
            lang: kotlin
            docker: maven
          # - language: Markdown
          #   lang: markdown
          #   docker: ???
          - language: Python
            lang: python
            docker: python
          - language: Ruby
            lang: ruby
            docker: ruby
          - language: Rust
            lang: rust
            docker: rust
          - language: Scala
            lang: scala
            docker: maven
          - language: TypeScript
            lang: typescript
            docker: node
    runs-on: ubuntu-latest
    container: ${{ matrix.docker }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: testing

      - name: Prepare testing binary
        run: chmod +x testing

      - name: Run tests
        run: |
          ${{ matrix.setup }}
          ./testing --lang=${{ matrix.lang }} test

  update-testing-branch:
    name: Update testing branch
    needs:
      - build-test
      - test-languages
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: testing

      - name: Update testing branch
        run: |
          git config --global user.name 'CI'
          git config --global user.email '<>'
          git fetch origin testing
          git worktree add testing-branch testing
          chmod +x testing
          ./testing generate testing-branch/generated-code
          pushd testing-branch
          git add .
          git diff --cached --exit-code || git commit -m "Update generated code (run ${{ github.run_id }})"
          popd
          rm -rf branch
          git worktree prune
          git push origin testing
