{{ doc_comment(documentation) }}
enum {{ base_name.camel_case(conv) }} {
    - for variant in variants {
    {{ doc_comment(&variant.documentation) }}
    ///
    - for field in &variant.fields {
    /// - {{ field.name.mixed_case(conv) }}: {{ field.documentation.get("en").unwrap().replace('\n', " ") }}
    - }
    case {{ variant.name.mixed_case(conv) }}(~
        - for (index, field) in variant.fields.iter().enumerate() {
        - if index != 0 {
            ~, ~
        - }
        ~{{ field.name.mixed_case(conv) }}: {{ type_name(&field.schema) }}~
        - }
    ~)

    - }
    {{ doc_read_from(&base_name.camel_case(conv)) }}
    static func readFrom<S: InputStream>(_ stream: S) -> {{ base_name.camel_case(conv) }} {
        switch stream.readInt32() {
            - for (tag, variant) in variants.iter().enumerate() {
            case {{ tag }}:
                - for field in &variant.fields {
                var {{ field.name.mixed_case(conv) }}: {{ type_name(&field.schema) }}
                {{ read_var(&field.name.mixed_case(conv), &field.schema) }}
                - }
                return {{ base_name.camel_case(conv) }}.{{ variant.name.mixed_case(conv) }}(~
                    - for (index, field) in variant.fields.iter().enumerate() {
                    - if index != 0 {
                        ~, ~
                    - }
                    ~{{ field.name.mixed_case(conv) }}: {{ field.name.mixed_case(conv) }}~
                    - }
                ~)
            - }
            default:
                fatalError("Unexpected tag value")
        }
    }

    {{ doc_write_to(&base_name.camel_case(conv)) }}
    func writeTo<S: OutputStream>(_ stream: S) {
        switch self {
            - for (tag, variant) in variants.iter().enumerate() {
            case let .{{ variant.name.mixed_case(conv) }}(~
                - for (index, field) in variant.fields.iter().enumerate() {
                - if index != 0 {
                    ~, ~
                - }
                ~{{ field.name.mixed_case(conv) }}~
                - }
            ~):
                stream.writeInt32({{ tag }})
                - for field in &variant.fields {
                {{ write_var(&field.name.mixed_case(conv), &field.schema) }}
                - }
            - }
        }
    }
}